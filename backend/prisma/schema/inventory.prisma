/// ---------- สรุปคงเหลือสาขา ----------
model Inventory {
  id        Int @id @default(autoincrement())
  branchId  Int
  productId Int

  qty       Int      @default(0) // คงเหลือปัจจุบันของสาขานั้น
  reserved  Int      @default(0) // เผื่อในอนาคต ถ้ามีระบบจอง
  updatedAt DateTime @updatedAt

  // relations
  branch  Branch  @relation(fields: [branchId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@unique([branchId, productId]) // 1 สาขา x 1 สินค้า = 1 แถว
  @@index([productId])
  @@index([branchId])
}

/// ---------- ประวัติการเคลื่อนไหวคงคลัง (ใช้ร่วมกับ enum StockLedgerType ใน enums.prisma) ----------
model StockLedger {
  id Int @id @default(autoincrement())

  productId            Int
  branchId             Int? // ถ้าเป็นเคลื่อนไหวฝั่งสาขา
  consignmentPartnerId Int? // ถ้าเป็นเคลื่อนไหวฝั่งฝากขาย

  qty      Int // บวก=เข้า / ลบ=ออก
  unitCost Decimal?        @db.Decimal(10, 2)
  type     StockLedgerType // <- ประกาศอยู่ใน schema/enums.prisma แล้ว

  refTable  String? // "Purchase" | "ConsignmentTransfer" | ...
  refId     Int?
  note      String?
  createdAt DateTime @default(now())

  // relations
  product            Product             @relation(fields: [productId], references: [id])
  branch             Branch?             @relation(fields: [branchId], references: [id])
  consignmentPartner ConsignmentPartner? @relation(fields: [consignmentPartnerId], references: [id])

  @@index([productId])
  @@index([branchId])
  @@index([consignmentPartnerId])
  @@index([type])
  @@index([refTable, refId])
}

// NOTE:
// - อย่าประกาศ enum StockLedgerType ซ้ำที่ไฟล์นี้ (มีแล้วใน schema/enums.prisma)
// - อย่าประกาศ ConsignmentInventory ที่ไฟล์นี้ (ตัวจริงอยู่ schema/consignment.prisma)
// - ฝั่งฝากขาย ใช้ชื่อโมเดล ConsignmentPartner ให้ตรงกับ schema/consignment.prisma
